name: 🗄️ Database Management

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'crates/database/**'
      - 'migrations/**'
      - 'schema/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'crates/database/**'
      - 'migrations/**'  
      - 'schema/**'
  workflow_dispatch:
    inputs:
      operation:
        description: '数据库操作'
        required: true
        default: 'check'
        type: choice
        options:
          - check
          - backup
          - schema

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # 🔍 数据库包检查
  database-check:
    name: 🔍 数据库包检查
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🦀 安装Rust工具链
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 缓存Cargo依赖
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-database-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: ⚡ 快速数据库包检查
        run: |
          echo "⚡ 快速数据库包检查..."
          cargo check --package database || echo "⚠️ database包编译有问题"
          echo "✅ 快速检查完成"

  # 📧 数据库状态通知
  notify-database-status:
    name: 📧 数据库状态通知
    runs-on: ubuntu-latest
    needs: [database-check]
    if: always() && !cancelled()
    
    steps:
      - name: 📧 发送成功通知
        if: needs.database-check.result == 'success'
        run: |
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"✅ 数据库检查通过!\n📋 分支: ${{ github.ref_name }}\n👤 提交者: ${{ github.actor }}\n⏰ 时间: $(date)\"}" \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          else
            echo "ℹ️ SLACK_WEBHOOK_URL未配置，跳过通知"
          fi

      - name: 🚨 发送失败通知
        if: needs.database-check.result == 'failure'
        run: |
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"❌ 数据库检查失败!\n📋 分支: ${{ github.ref_name }}\n👤 提交者: ${{ github.actor }}\n⏰ 时间: $(date)\"}" \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          else
            echo "ℹ️ SLACK_WEBHOOK_URL未配置，跳过通知"
          fi